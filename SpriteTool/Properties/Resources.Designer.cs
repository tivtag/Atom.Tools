//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.34209
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Atom.Tools.SpriteTool.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Atom.Tools.SpriteTool.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Clone ähnelt.
        /// </summary>
        public static string ButtonLabelClone {
            get {
                return ResourceManager.GetString("ButtonLabelClone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pause ähnelt.
        /// </summary>
        public static string ButtonLabelPause {
            get {
                return ResourceManager.GetString("ButtonLabelPause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Play ähnelt.
        /// </summary>
        public static string ButtonLabelPlay {
            get {
                return ResourceManager.GetString("ButtonLabelPlay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Stop ähnelt.
        /// </summary>
        public static string ButtonLabelStop {
            get {
                return ResourceManager.GetString("ButtonLabelStop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Design Mode ähnelt.
        /// </summary>
        public static string DesignMode {
            get {
                return ResourceManager.GetString("DesignMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The sprite &apos;{0}&apos; is already open. Overwrite it? ähnelt.
        /// </summary>
        public static string DialogInfoOverwriteOpenSpriteX {
            get {
                return ResourceManager.GetString("DialogInfoOverwriteOpenSpriteX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A sprite already exists at &apos;{0}&apos;. Overwrite it? ähnelt.
        /// </summary>
        public static string DialogInfoOverwriteSpriteX {
            get {
                return ResourceManager.GetString("DialogInfoOverwriteSpriteX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The sprite(s) have been successfully saved. ähnelt.
        /// </summary>
        public static string DialogTextSpritesSuccessfullySaved {
            get {
                return ResourceManager.GetString("DialogTextSpritesSuccessfullySaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the Sprites resources to open. ähnelt.
        /// </summary>
        public static string DialogTitleOpenSprite {
            get {
                return ResourceManager.GetString("DialogTitleOpenSprite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the Texture Atlas resource to open. ähnelt.
        /// </summary>
        public static string DialogTitleOpenTextureAtlas {
            get {
                return ResourceManager.GetString("DialogTitleOpenTextureAtlas", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the Texture resource to use. ähnelt.
        /// </summary>
        public static string DialogTitleSpriteTexture {
            get {
                return ResourceManager.GetString("DialogTitleSpriteTexture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Edit Mode ähnelt.
        /// </summary>
        public static string EditMode {
            get {
                return ResourceManager.GetString("EditMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An error occured when trying to load a Sprite. The existing Sprite was of type SpriteAnimation. ähnelt.
        /// </summary>
        public static string ErrorWhenTryingToLoadSpriteExisitingSpriteWasAnim {
            get {
                return ResourceManager.GetString("ErrorWhenTryingToLoadSpriteExisitingSpriteWasAnim", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Image Files (*.png;*.tga;*.jpg;*.bmp)|*.png;*.tga*.jpg;*.jpeg;*.bmp ähnelt.
        /// </summary>
        public static string FilterImageFiles {
            get {
                return ResourceManager.GetString("FilterImageFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All Sprite Resources (*.spr;*.aspr)|*.spr;*.aspr|Sprites (.spr)|*.spr|Animated Sprites (.aspr)|*.aspr ähnelt.
        /// </summary>
        public static string FilterSpriteFiles {
            get {
                return ResourceManager.GetString("FilterSpriteFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sprites (*.spr)|*.spr ähnelt.
        /// </summary>
        public static string FilterSpriteOnly {
            get {
                return ResourceManager.GetString("FilterSpriteOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Image Files (*.png;*.tga;*.jpg;*.bmp)|*.png;*.tga*.jpg;*.jpeg;*.bmp|Compiled Binary XNA files (*.xnb)|*.xnb|All Files (*.*)|*.*&quot; ähnelt.
        /// </summary>
        public static string FilterTextureFiles {
            get {
                return ResourceManager.GetString("FilterTextureFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Frames ähnelt.
        /// </summary>
        public static string HeaderFrames {
            get {
                return ResourceManager.GetString("HeaderFrames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Selected Frame ähnelt.
        /// </summary>
        public static string HeaderSelectedFrame {
            get {
                return ResourceManager.GetString("HeaderSelectedFrame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Settings ähnelt.
        /// </summary>
        public static string HeaderSettings {
            get {
                return ResourceManager.GetString("HeaderSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add ähnelt.
        /// </summary>
        public static string LabelAddFrame {
            get {
                return ResourceManager.GetString("LabelAddFrame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Offset ähnelt.
        /// </summary>
        public static string LabelFrameOffset {
            get {
                return ResourceManager.GetString("LabelFrameOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sprite ähnelt.
        /// </summary>
        public static string LabelFrameSprite {
            get {
                return ResourceManager.GetString("LabelFrameSprite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Time ähnelt.
        /// </summary>
        public static string LabelFrameTime {
            get {
                return ResourceManager.GetString("LabelFrameTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Down ähnelt.
        /// </summary>
        public static string LabelMoveFrameDown {
            get {
                return ResourceManager.GetString("LabelMoveFrameDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Up ähnelt.
        /// </summary>
        public static string LabelMoveFrameUp {
            get {
                return ResourceManager.GetString("LabelMoveFrameUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove ähnelt.
        /// </summary>
        public static string LabelRemoveFrame {
            get {
                return ResourceManager.GetString("LabelRemoveFrame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Is Looping ähnelt.
        /// </summary>
        public static string LabelSpriteAnimationLoopingState {
            get {
                return ResourceManager.GetString("LabelSpriteAnimationLoopingState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Speed ähnelt.
        /// </summary>
        public static string LabelSpriteAnimationSpeed {
            get {
                return ResourceManager.GetString("LabelSpriteAnimationSpeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Color Tint ähnelt.
        /// </summary>
        public static string LabelSpriteColorTint {
            get {
                return ResourceManager.GetString("LabelSpriteColorTint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Effects ähnelt.
        /// </summary>
        public static string LabelSpriteEffects {
            get {
                return ResourceManager.GetString("LabelSpriteEffects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name ähnelt.
        /// </summary>
        public static string LabelSpriteName {
            get {
                return ResourceManager.GetString("LabelSpriteName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Origin ähnelt.
        /// </summary>
        public static string LabelSpriteOrigin {
            get {
                return ResourceManager.GetString("LabelSpriteOrigin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sprite Properties ähnelt.
        /// </summary>
        public static string LabelSpriteProperties {
            get {
                return ResourceManager.GetString("LabelSpriteProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rotation ähnelt.
        /// </summary>
        public static string LabelSpriteRotation {
            get {
                return ResourceManager.GetString("LabelSpriteRotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scale ähnelt.
        /// </summary>
        public static string LabelSpriteScale {
            get {
                return ResourceManager.GetString("LabelSpriteScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Source ähnelt.
        /// </summary>
        public static string LabelSpriteSource {
            get {
                return ResourceManager.GetString("LabelSpriteSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Texture ähnelt.
        /// </summary>
        public static string LabelSpriteTexture {
            get {
                return ResourceManager.GetString("LabelSpriteTexture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die About ähnelt.
        /// </summary>
        public static string MenuHeaderAbout {
            get {
                return ResourceManager.GetString("MenuHeaderAbout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Animated Sprite ähnelt.
        /// </summary>
        public static string MenuHeaderAnimatedSprite {
            get {
                return ResourceManager.GetString("MenuHeaderAnimatedSprite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exit ähnelt.
        /// </summary>
        public static string MenuHeaderExit {
            get {
                return ResourceManager.GetString("MenuHeaderExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die File ähnelt.
        /// </summary>
        public static string MenuHeaderFile {
            get {
                return ResourceManager.GetString("MenuHeaderFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Help ähnelt.
        /// </summary>
        public static string MenuHeaderHelp {
            get {
                return ResourceManager.GetString("MenuHeaderHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New ähnelt.
        /// </summary>
        public static string MenuHeaderNew {
            get {
                return ResourceManager.GetString("MenuHeaderNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open ähnelt.
        /// </summary>
        public static string MenuHeaderOpen {
            get {
                return ResourceManager.GetString("MenuHeaderOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Options ähnelt.
        /// </summary>
        public static string MenuHeaderOptions {
            get {
                return ResourceManager.GetString("MenuHeaderOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reset ähnelt.
        /// </summary>
        public static string MenuHeaderResetView {
            get {
                return ResourceManager.GetString("MenuHeaderResetView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save ähnelt.
        /// </summary>
        public static string MenuHeaderSave {
            get {
                return ResourceManager.GetString("MenuHeaderSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save All ähnelt.
        /// </summary>
        public static string MenuHeaderSaveAll {
            get {
                return ResourceManager.GetString("MenuHeaderSaveAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save Selected ähnelt.
        /// </summary>
        public static string MenuHeaderSaveSelected {
            get {
                return ResourceManager.GetString("MenuHeaderSaveSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sprite ähnelt.
        /// </summary>
        public static string MenuHeaderSprite {
            get {
                return ResourceManager.GetString("MenuHeaderSprite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Texture Atlas ähnelt.
        /// </summary>
        public static string MenuHeaderTextureAtlas {
            get {
                return ResourceManager.GetString("MenuHeaderTextureAtlas", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Texture Atlas (Sprites Centered) ähnelt.
        /// </summary>
        public static string MenuHeaderTextureAtlasSpritesCentered {
            get {
                return ResourceManager.GetString("MenuHeaderTextureAtlasSpritesCentered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die View ähnelt.
        /// </summary>
        public static string MenuHeaderView {
            get {
                return ResourceManager.GetString("MenuHeaderView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Content\\Sprites\\ ähnelt.
        /// </summary>
        public static string PathSprites {
            get {
                return ResourceManager.GetString("PathSprites", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Content\\Textures\\ ähnelt.
        /// </summary>
        public static string PathTextures {
            get {
                return ResourceManager.GetString("PathTextures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  ähnelt.
        /// </summary>
        public static string Question {
            get {
                return ResourceManager.GetString("Question", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you really want to delete the currently selected frame? ähnelt.
        /// </summary>
        public static string QuestionReallyDeleteSelectedFrame {
            get {
                return ResourceManager.GetString("QuestionReallyDeleteSelectedFrame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The color the sprite is tinted in.
        ///The default value is White. (no tinting) ähnelt.
        /// </summary>
        public static string TooltipSpriteColorTint {
            get {
                return ResourceManager.GetString("TooltipSpriteColorTint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The effects applied when drawing the sprite.
        ///The default value is None. ähnelt.
        /// </summary>
        public static string TooltipSpriteEffects {
            get {
                return ResourceManager.GetString("TooltipSpriteEffects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The name of the sprite.
        ///A sprite is always saved under its name. ähnelt.
        /// </summary>
        public static string TooltipSpriteName {
            get {
                return ResourceManager.GetString("TooltipSpriteName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The origin of the sprite.
        ///If the origin is set to the half size of the sprite,
        ///then the sprite will be rotated around its center when applying any rotation.
        ///The default value is (0; 0). ähnelt.
        /// </summary>
        public static string TooltipSpriteOrigin {
            get {
                return ResourceManager.GetString("TooltipSpriteOrigin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The rotation of the Sprite in degrees.
        ///The default value is 0. ähnelt.
        /// </summary>
        public static string TooltipSpriteRotation {
            get {
                return ResourceManager.GetString("TooltipSpriteRotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The scaling factor applied when drawing the sprite.
        ///The default value is (1; 1). ähnelt.
        /// </summary>
        public static string TooltipSpriteScale {
            get {
                return ResourceManager.GetString("TooltipSpriteScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The location of the sprite within the texture. ähnelt.
        /// </summary>
        public static string TooltipSpriteSource {
            get {
                return ResourceManager.GetString("TooltipSpriteSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The texture that contains the sprite.
        ///A texture can contain multiple sprites
        ///by setting the Source value of the indivual sprites. ähnelt.
        /// </summary>
        public static string TooltipSpriteTexture {
            get {
                return ResourceManager.GetString("TooltipSpriteTexture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Click to set the texture of the sprite. ähnelt.
        /// </summary>
        public static string TooltipSpriteTextureButton {
            get {
                return ResourceManager.GetString("TooltipSpriteTextureButton", resourceCulture);
            }
        }
    }
}
